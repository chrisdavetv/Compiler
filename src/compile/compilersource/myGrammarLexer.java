// Generated from myGrammar.g4 by ANTLR 4.5.3

package compile.compilersource;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class myGrammarLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5.3", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, Writeln=2, Write=3, Scan=4, Def=5, If=6, Else=7, Return=8, For=9, 
		While=10, To=11, Do=12, Start=13, End=14, Null=15, Split=16, Length=17, 
		Try=18, Catch=19, Period=20, Or=21, And=22, Equals=23, NEquals=24, GTEquals=25, 
		LTEquals=26, Pow=27, Exclamation=28, GreatThan=29, LessThan=30, Add=31, 
		Subtract=32, Multiply=33, Divide=34, Modulus=35, OpenCurlyBracket=36, 
		CloseCurlyBracket=37, OpenBracket=38, CloseBracket=39, OpenParen=40, CloseParen=41, 
		SemiColon=42, Assign=43, Comma=44, Colon=45, Final=46, Finally=47, DataType=48, 
		Exception=49, Bool=50, Number=51, Identifier=52, String=53, Comment=54, 
		Space=55, Int=56, Digit=57, UNKNOWN_CHAR=58;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "Writeln", "Write", "Scan", "Def", "If", "Else", "Return", "For", 
		"While", "To", "Do", "Start", "End", "Null", "Split", "Length", "Try", 
		"Catch", "Period", "Or", "And", "Equals", "NEquals", "GTEquals", "LTEquals", 
		"Pow", "Exclamation", "GreatThan", "LessThan", "Add", "Subtract", "Multiply", 
		"Divide", "Modulus", "OpenCurlyBracket", "CloseCurlyBracket", "OpenBracket", 
		"CloseBracket", "OpenParen", "CloseParen", "SemiColon", "Assign", "Comma", 
		"Colon", "Final", "Finally", "DataType", "Exception", "Bool", "Number", 
		"Identifier", "String", "Comment", "Space", "Int", "Digit", "UNKNOWN_CHAR"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'?'", "'Writeln'", "'Write'", "'Scan'", "'def'", "'if'", "'else'", 
		"'return'", "'for'", "'while'", "'to'", "'do'", "'start'", "'end'", "'null'", 
		"'split'", "'length'", "'try'", "'catch'", "'.'", "'||'", "'&&'", "'=='", 
		"'!='", "'>='", "'<='", "'^'", "'!'", "'>'", "'<'", "'+'", "'-'", "'*'", 
		"'/'", "'%'", "'{'", "'}'", "'['", "']'", "'('", "')'", "';'", "'='", 
		"','", "':'", "'final'", "'finally'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, "Writeln", "Write", "Scan", "Def", "If", "Else", "Return", 
		"For", "While", "To", "Do", "Start", "End", "Null", "Split", "Length", 
		"Try", "Catch", "Period", "Or", "And", "Equals", "NEquals", "GTEquals", 
		"LTEquals", "Pow", "Exclamation", "GreatThan", "LessThan", "Add", "Subtract", 
		"Multiply", "Divide", "Modulus", "OpenCurlyBracket", "CloseCurlyBracket", 
		"OpenBracket", "CloseBracket", "OpenParen", "CloseParen", "SemiColon", 
		"Assign", "Comma", "Colon", "Final", "Finally", "DataType", "Exception", 
		"Bool", "Number", "Identifier", "String", "Comment", "Space", "Int", "Digit", 
		"UNKNOWN_CHAR"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public myGrammarLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "myGrammar.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2<\u0204\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\3\2\3\2\3\3"+
		"\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3"+
		"\5\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t"+
		"\3\t\3\t\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\r"+
		"\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\20\3\20\3"+
		"\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3"+
		"\22\3\22\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3"+
		"\26\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3"+
		"\32\3\33\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3!\3"+
		"!\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3(\3)\3)\3*\3*\3+\3+\3,\3"+
		",\3-\3-\3.\3.\3/\3/\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60"+
		"\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61"+
		"\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61"+
		"\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61"+
		"\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61"+
		"\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61"+
		"\5\61\u0164\n\61\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62"+
		"\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62"+
		"\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62"+
		"\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62"+
		"\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\5\62\u01a3\n\62\3\63\3\63\3\63"+
		"\3\63\3\63\3\63\3\63\3\63\3\63\5\63\u01ae\n\63\3\64\3\64\3\64\7\64\u01b3"+
		"\n\64\f\64\16\64\u01b6\13\64\5\64\u01b8\n\64\3\65\3\65\7\65\u01bc\n\65"+
		"\f\65\16\65\u01bf\13\65\3\66\3\66\3\66\3\66\3\66\3\66\7\66\u01c7\n\66"+
		"\f\66\16\66\u01ca\13\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\7\66\u01d3"+
		"\n\66\f\66\16\66\u01d6\13\66\3\66\5\66\u01d9\n\66\3\67\3\67\3\67\3\67"+
		"\7\67\u01df\n\67\f\67\16\67\u01e2\13\67\3\67\3\67\3\67\3\67\7\67\u01e8"+
		"\n\67\f\67\16\67\u01eb\13\67\3\67\3\67\5\67\u01ef\n\67\3\67\3\67\38\3"+
		"8\38\38\39\39\79\u01f9\n9\f9\169\u01fc\139\39\59\u01ff\n9\3:\3:\3;\3;"+
		"\3\u01e9\2<\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33"+
		"\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67"+
		"\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65"+
		"i\66k\67m8o9q:s;u<\3\2\f\5\2C\\aac|\6\2\62;C\\aac|\3\2$$\5\2\f\f\17\17"+
		"$$\3\2))\5\2\f\f\17\17))\4\2\f\f\17\17\5\2\13\f\16\17\"\"\3\2\63;\3\2"+
		"\62;\u0220\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2"+
		"\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27"+
		"\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2"+
		"\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2"+
		"\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2"+
		"\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2"+
		"\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S"+
		"\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2"+
		"\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2"+
		"\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\3w\3\2\2\2\5y"+
		"\3\2\2\2\7\u0081\3\2\2\2\t\u0087\3\2\2\2\13\u008c\3\2\2\2\r\u0090\3\2"+
		"\2\2\17\u0093\3\2\2\2\21\u0098\3\2\2\2\23\u009f\3\2\2\2\25\u00a3\3\2\2"+
		"\2\27\u00a9\3\2\2\2\31\u00ac\3\2\2\2\33\u00af\3\2\2\2\35\u00b5\3\2\2\2"+
		"\37\u00b9\3\2\2\2!\u00be\3\2\2\2#\u00c4\3\2\2\2%\u00cb\3\2\2\2\'\u00cf"+
		"\3\2\2\2)\u00d5\3\2\2\2+\u00d7\3\2\2\2-\u00da\3\2\2\2/\u00dd\3\2\2\2\61"+
		"\u00e0\3\2\2\2\63\u00e3\3\2\2\2\65\u00e6\3\2\2\2\67\u00e9\3\2\2\29\u00eb"+
		"\3\2\2\2;\u00ed\3\2\2\2=\u00ef\3\2\2\2?\u00f1\3\2\2\2A\u00f3\3\2\2\2C"+
		"\u00f5\3\2\2\2E\u00f7\3\2\2\2G\u00f9\3\2\2\2I\u00fb\3\2\2\2K\u00fd\3\2"+
		"\2\2M\u00ff\3\2\2\2O\u0101\3\2\2\2Q\u0103\3\2\2\2S\u0105\3\2\2\2U\u0107"+
		"\3\2\2\2W\u0109\3\2\2\2Y\u010b\3\2\2\2[\u010d\3\2\2\2]\u010f\3\2\2\2_"+
		"\u0115\3\2\2\2a\u0163\3\2\2\2c\u01a2\3\2\2\2e\u01ad\3\2\2\2g\u01af\3\2"+
		"\2\2i\u01b9\3\2\2\2k\u01d8\3\2\2\2m\u01ee\3\2\2\2o\u01f2\3\2\2\2q\u01fe"+
		"\3\2\2\2s\u0200\3\2\2\2u\u0202\3\2\2\2wx\7A\2\2x\4\3\2\2\2yz\7Y\2\2z{"+
		"\7t\2\2{|\7k\2\2|}\7v\2\2}~\7g\2\2~\177\7n\2\2\177\u0080\7p\2\2\u0080"+
		"\6\3\2\2\2\u0081\u0082\7Y\2\2\u0082\u0083\7t\2\2\u0083\u0084\7k\2\2\u0084"+
		"\u0085\7v\2\2\u0085\u0086\7g\2\2\u0086\b\3\2\2\2\u0087\u0088\7U\2\2\u0088"+
		"\u0089\7e\2\2\u0089\u008a\7c\2\2\u008a\u008b\7p\2\2\u008b\n\3\2\2\2\u008c"+
		"\u008d\7f\2\2\u008d\u008e\7g\2\2\u008e\u008f\7h\2\2\u008f\f\3\2\2\2\u0090"+
		"\u0091\7k\2\2\u0091\u0092\7h\2\2\u0092\16\3\2\2\2\u0093\u0094\7g\2\2\u0094"+
		"\u0095\7n\2\2\u0095\u0096\7u\2\2\u0096\u0097\7g\2\2\u0097\20\3\2\2\2\u0098"+
		"\u0099\7t\2\2\u0099\u009a\7g\2\2\u009a\u009b\7v\2\2\u009b\u009c\7w\2\2"+
		"\u009c\u009d\7t\2\2\u009d\u009e\7p\2\2\u009e\22\3\2\2\2\u009f\u00a0\7"+
		"h\2\2\u00a0\u00a1\7q\2\2\u00a1\u00a2\7t\2\2\u00a2\24\3\2\2\2\u00a3\u00a4"+
		"\7y\2\2\u00a4\u00a5\7j\2\2\u00a5\u00a6\7k\2\2\u00a6\u00a7\7n\2\2\u00a7"+
		"\u00a8\7g\2\2\u00a8\26\3\2\2\2\u00a9\u00aa\7v\2\2\u00aa\u00ab\7q\2\2\u00ab"+
		"\30\3\2\2\2\u00ac\u00ad\7f\2\2\u00ad\u00ae\7q\2\2\u00ae\32\3\2\2\2\u00af"+
		"\u00b0\7u\2\2\u00b0\u00b1\7v\2\2\u00b1\u00b2\7c\2\2\u00b2\u00b3\7t\2\2"+
		"\u00b3\u00b4\7v\2\2\u00b4\34\3\2\2\2\u00b5\u00b6\7g\2\2\u00b6\u00b7\7"+
		"p\2\2\u00b7\u00b8\7f\2\2\u00b8\36\3\2\2\2\u00b9\u00ba\7p\2\2\u00ba\u00bb"+
		"\7w\2\2\u00bb\u00bc\7n\2\2\u00bc\u00bd\7n\2\2\u00bd \3\2\2\2\u00be\u00bf"+
		"\7u\2\2\u00bf\u00c0\7r\2\2\u00c0\u00c1\7n\2\2\u00c1\u00c2\7k\2\2\u00c2"+
		"\u00c3\7v\2\2\u00c3\"\3\2\2\2\u00c4\u00c5\7n\2\2\u00c5\u00c6\7g\2\2\u00c6"+
		"\u00c7\7p\2\2\u00c7\u00c8\7i\2\2\u00c8\u00c9\7v\2\2\u00c9\u00ca\7j\2\2"+
		"\u00ca$\3\2\2\2\u00cb\u00cc\7v\2\2\u00cc\u00cd\7t\2\2\u00cd\u00ce\7{\2"+
		"\2\u00ce&\3\2\2\2\u00cf\u00d0\7e\2\2\u00d0\u00d1\7c\2\2\u00d1\u00d2\7"+
		"v\2\2\u00d2\u00d3\7e\2\2\u00d3\u00d4\7j\2\2\u00d4(\3\2\2\2\u00d5\u00d6"+
		"\7\60\2\2\u00d6*\3\2\2\2\u00d7\u00d8\7~\2\2\u00d8\u00d9\7~\2\2\u00d9,"+
		"\3\2\2\2\u00da\u00db\7(\2\2\u00db\u00dc\7(\2\2\u00dc.\3\2\2\2\u00dd\u00de"+
		"\7?\2\2\u00de\u00df\7?\2\2\u00df\60\3\2\2\2\u00e0\u00e1\7#\2\2\u00e1\u00e2"+
		"\7?\2\2\u00e2\62\3\2\2\2\u00e3\u00e4\7@\2\2\u00e4\u00e5\7?\2\2\u00e5\64"+
		"\3\2\2\2\u00e6\u00e7\7>\2\2\u00e7\u00e8\7?\2\2\u00e8\66\3\2\2\2\u00e9"+
		"\u00ea\7`\2\2\u00ea8\3\2\2\2\u00eb\u00ec\7#\2\2\u00ec:\3\2\2\2\u00ed\u00ee"+
		"\7@\2\2\u00ee<\3\2\2\2\u00ef\u00f0\7>\2\2\u00f0>\3\2\2\2\u00f1\u00f2\7"+
		"-\2\2\u00f2@\3\2\2\2\u00f3\u00f4\7/\2\2\u00f4B\3\2\2\2\u00f5\u00f6\7,"+
		"\2\2\u00f6D\3\2\2\2\u00f7\u00f8\7\61\2\2\u00f8F\3\2\2\2\u00f9\u00fa\7"+
		"\'\2\2\u00faH\3\2\2\2\u00fb\u00fc\7}\2\2\u00fcJ\3\2\2\2\u00fd\u00fe\7"+
		"\177\2\2\u00feL\3\2\2\2\u00ff\u0100\7]\2\2\u0100N\3\2\2\2\u0101\u0102"+
		"\7_\2\2\u0102P\3\2\2\2\u0103\u0104\7*\2\2\u0104R\3\2\2\2\u0105\u0106\7"+
		"+\2\2\u0106T\3\2\2\2\u0107\u0108\7=\2\2\u0108V\3\2\2\2\u0109\u010a\7?"+
		"\2\2\u010aX\3\2\2\2\u010b\u010c\7.\2\2\u010cZ\3\2\2\2\u010d\u010e\7<\2"+
		"\2\u010e\\\3\2\2\2\u010f\u0110\7h\2\2\u0110\u0111\7k\2\2\u0111\u0112\7"+
		"p\2\2\u0112\u0113\7c\2\2\u0113\u0114\7n\2\2\u0114^\3\2\2\2\u0115\u0116"+
		"\7h\2\2\u0116\u0117\7k\2\2\u0117\u0118\7p\2\2\u0118\u0119\7c\2\2\u0119"+
		"\u011a\7n\2\2\u011a\u011b\7n\2\2\u011b\u011c\7{\2\2\u011c`\3\2\2\2\u011d"+
		"\u011e\7d\2\2\u011e\u011f\7q\2\2\u011f\u0120\7q\2\2\u0120\u0121\7n\2\2"+
		"\u0121\u0122\7g\2\2\u0122\u0123\7c\2\2\u0123\u0164\7p\2\2\u0124\u0125"+
		"\7u\2\2\u0125\u0126\7v\2\2\u0126\u0127\7t\2\2\u0127\u0128\7k\2\2\u0128"+
		"\u0129\7p\2\2\u0129\u0164\7i\2\2\u012a\u012b\7k\2\2\u012b\u012c\7p\2\2"+
		"\u012c\u0164\7v\2\2\u012d\u012e\7h\2\2\u012e\u012f\7n\2\2\u012f\u0130"+
		"\7q\2\2\u0130\u0131\7c\2\2\u0131\u0164\7v\2\2\u0132\u0133\7x\2\2\u0133"+
		"\u0134\7q\2\2\u0134\u0135\7k\2\2\u0135\u0164\7f\2\2\u0136\u0137\7e\2\2"+
		"\u0137\u0138\7j\2\2\u0138\u0139\7c\2\2\u0139\u0164\7t\2\2\u013a\u013b"+
		"\7d\2\2\u013b\u013c\7q\2\2\u013c\u013d\7q\2\2\u013d\u013e\7n\2\2\u013e"+
		"\u013f\7g\2\2\u013f\u0140\7c\2\2\u0140\u0141\7p\2\2\u0141\u0142\7]\2\2"+
		"\u0142\u0164\7_\2\2\u0143\u0144\7u\2\2\u0144\u0145\7v\2\2\u0145\u0146"+
		"\7t\2\2\u0146\u0147\7k\2\2\u0147\u0148\7p\2\2\u0148\u0149\7i\2\2\u0149"+
		"\u014a\7]\2\2\u014a\u0164\7_\2\2\u014b\u014c\7k\2\2\u014c\u014d\7p\2\2"+
		"\u014d\u014e\7v\2\2\u014e\u014f\7]\2\2\u014f\u0164\7_\2\2\u0150\u0151"+
		"\7h\2\2\u0151\u0152\7n\2\2\u0152\u0153\7q\2\2\u0153\u0154\7c\2\2\u0154"+
		"\u0155\7v\2\2\u0155\u0156\7]\2\2\u0156\u0164\7_\2\2\u0157\u0158\7x\2\2"+
		"\u0158\u0159\7q\2\2\u0159\u015a\7k\2\2\u015a\u015b\7f\2\2\u015b\u015c"+
		"\7]\2\2\u015c\u0164\7_\2\2\u015d\u015e\7e\2\2\u015e\u015f\7j\2\2\u015f"+
		"\u0160\7c\2\2\u0160\u0161\7t\2\2\u0161\u0162\7]\2\2\u0162\u0164\7_\2\2"+
		"\u0163\u011d\3\2\2\2\u0163\u0124\3\2\2\2\u0163\u012a\3\2\2\2\u0163\u012d"+
		"\3\2\2\2\u0163\u0132\3\2\2\2\u0163\u0136\3\2\2\2\u0163\u013a\3\2\2\2\u0163"+
		"\u0143\3\2\2\2\u0163\u014b\3\2\2\2\u0163\u0150\3\2\2\2\u0163\u0157\3\2"+
		"\2\2\u0163\u015d\3\2\2\2\u0164b\3\2\2\2\u0165\u0166\7C\2\2\u0166\u0167"+
		"\7t\2\2\u0167\u0168\7t\2\2\u0168\u0169\7c\2\2\u0169\u016a\7{\2\2\u016a"+
		"\u016b\7K\2\2\u016b\u016c\7p\2\2\u016c\u016d\7f\2\2\u016d\u016e\7g\2\2"+
		"\u016e\u016f\7z\2\2\u016f\u0170\7Q\2\2\u0170\u0171\7w\2\2\u0171\u0172"+
		"\7v\2\2\u0172\u0173\7Q\2\2\u0173\u0174\7h\2\2\u0174\u0175\7D\2\2\u0175"+
		"\u0176\7q\2\2\u0176\u0177\7w\2\2\u0177\u0178\7p\2\2\u0178\u0179\7f\2\2"+
		"\u0179\u01a3\7u\2\2\u017a\u017b\7P\2\2\u017b\u017c\7w\2\2\u017c\u017d"+
		"\7o\2\2\u017d\u017e\7d\2\2\u017e\u017f\7g\2\2\u017f\u0180\7t\2\2\u0180"+
		"\u0181\7H\2\2\u0181\u0182\7q\2\2\u0182\u0183\7t\2\2\u0183\u0184\7o\2\2"+
		"\u0184\u0185\7c\2\2\u0185\u0186\7v\2\2\u0186\u0187\7G\2\2\u0187\u0188"+
		"\7z\2\2\u0188\u0189\7e\2\2\u0189\u018a\7g\2\2\u018a\u018b\7r\2\2\u018b"+
		"\u018c\7v\2\2\u018c\u018d\7k\2\2\u018d\u018e\7q\2\2\u018e\u01a3\7p\2\2"+
		"\u018f\u0190\7C\2\2\u0190\u0191\7t\2\2\u0191\u0192\7k\2\2\u0192\u0193"+
		"\7v\2\2\u0193\u0194\7j\2\2\u0194\u0195\7o\2\2\u0195\u0196\7g\2\2\u0196"+
		"\u0197\7v\2\2\u0197\u0198\7k\2\2\u0198\u0199\7e\2\2\u0199\u019a\7G\2\2"+
		"\u019a\u019b\7z\2\2\u019b\u019c\7e\2\2\u019c\u019d\7g\2\2\u019d\u019e"+
		"\7r\2\2\u019e\u019f\7v\2\2\u019f\u01a0\7k\2\2\u01a0\u01a1\7q\2\2\u01a1"+
		"\u01a3\7p\2\2\u01a2\u0165\3\2\2\2\u01a2\u017a\3\2\2\2\u01a2\u018f\3\2"+
		"\2\2\u01a3d\3\2\2\2\u01a4\u01a5\7v\2\2\u01a5\u01a6\7t\2\2\u01a6\u01a7"+
		"\7w\2\2\u01a7\u01ae\7g\2\2\u01a8\u01a9\7h\2\2\u01a9\u01aa\7c\2\2\u01aa"+
		"\u01ab\7n\2\2\u01ab\u01ac\7u\2\2\u01ac\u01ae\7g\2\2\u01ad\u01a4\3\2\2"+
		"\2\u01ad\u01a8\3\2\2\2\u01aef\3\2\2\2\u01af\u01b7\5q9\2\u01b0\u01b4\7"+
		"\60\2\2\u01b1\u01b3\5s:\2\u01b2\u01b1\3\2\2\2\u01b3\u01b6\3\2\2\2\u01b4"+
		"\u01b2\3\2\2\2\u01b4\u01b5\3\2\2\2\u01b5\u01b8\3\2\2\2\u01b6\u01b4\3\2"+
		"\2\2\u01b7\u01b0\3\2\2\2\u01b7\u01b8\3\2\2\2\u01b8h\3\2\2\2\u01b9\u01bd"+
		"\t\2\2\2\u01ba\u01bc\t\3\2\2\u01bb\u01ba\3\2\2\2\u01bc\u01bf\3\2\2\2\u01bd"+
		"\u01bb\3\2\2\2\u01bd\u01be\3\2\2\2\u01bej\3\2\2\2\u01bf\u01bd\3\2\2\2"+
		"\u01c0\u01c8\t\4\2\2\u01c1\u01c7\n\5\2\2\u01c2\u01c3\7^\2\2\u01c3\u01c7"+
		"\7^\2\2\u01c4\u01c5\7^\2\2\u01c5\u01c7\7$\2\2\u01c6\u01c1\3\2\2\2\u01c6"+
		"\u01c2\3\2\2\2\u01c6\u01c4\3\2\2\2\u01c7\u01ca\3\2\2\2\u01c8\u01c6\3\2"+
		"\2\2\u01c8\u01c9\3\2\2\2\u01c9\u01cb\3\2\2\2\u01ca\u01c8\3\2\2\2\u01cb"+
		"\u01d9\t\4\2\2\u01cc\u01d4\t\6\2\2\u01cd\u01d3\n\7\2\2\u01ce\u01cf\7^"+
		"\2\2\u01cf\u01d3\7^\2\2\u01d0\u01d1\7^\2\2\u01d1\u01d3\7)\2\2\u01d2\u01cd"+
		"\3\2\2\2\u01d2\u01ce\3\2\2\2\u01d2\u01d0\3\2\2\2\u01d3\u01d6\3\2\2\2\u01d4"+
		"\u01d2\3\2\2\2\u01d4\u01d5\3\2\2\2\u01d5\u01d7\3\2\2\2\u01d6\u01d4\3\2"+
		"\2\2\u01d7\u01d9\t\6\2\2\u01d8\u01c0\3\2\2\2\u01d8\u01cc\3\2\2\2\u01d9"+
		"l\3\2\2\2\u01da\u01db\7\61\2\2\u01db\u01dc\7\61\2\2\u01dc\u01e0\3\2\2"+
		"\2\u01dd\u01df\n\b\2\2\u01de\u01dd\3\2\2\2\u01df\u01e2\3\2\2\2\u01e0\u01de"+
		"\3\2\2\2\u01e0\u01e1\3\2\2\2\u01e1\u01ef\3\2\2\2\u01e2\u01e0\3\2\2\2\u01e3"+
		"\u01e4\7\61\2\2\u01e4\u01e5\7,\2\2\u01e5\u01e9\3\2\2\2\u01e6\u01e8\13"+
		"\2\2\2\u01e7\u01e6\3\2\2\2\u01e8\u01eb\3\2\2\2\u01e9\u01ea\3\2\2\2\u01e9"+
		"\u01e7\3\2\2\2\u01ea\u01ec\3\2\2\2\u01eb\u01e9\3\2\2\2\u01ec\u01ed\7,"+
		"\2\2\u01ed\u01ef\7\61\2\2\u01ee\u01da\3\2\2\2\u01ee\u01e3\3\2\2\2\u01ef"+
		"\u01f0\3\2\2\2\u01f0\u01f1\b\67\2\2\u01f1n\3\2\2\2\u01f2\u01f3\t\t\2\2"+
		"\u01f3\u01f4\3\2\2\2\u01f4\u01f5\b8\2\2\u01f5p\3\2\2\2\u01f6\u01fa\t\n"+
		"\2\2\u01f7\u01f9\5s:\2\u01f8\u01f7\3\2\2\2\u01f9\u01fc\3\2\2\2\u01fa\u01f8"+
		"\3\2\2\2\u01fa\u01fb\3\2\2\2\u01fb\u01ff\3\2\2\2\u01fc\u01fa\3\2\2\2\u01fd"+
		"\u01ff\7\62\2\2\u01fe\u01f6\3\2\2\2\u01fe\u01fd\3\2\2\2\u01ffr\3\2\2\2"+
		"\u0200\u0201\t\13\2\2\u0201t\3\2\2\2\u0202\u0203\13\2\2\2\u0203v\3\2\2"+
		"\2\23\2\u0163\u01a2\u01ad\u01b4\u01b7\u01bd\u01c6\u01c8\u01d2\u01d4\u01d8"+
		"\u01e0\u01e9\u01ee\u01fa\u01fe\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}