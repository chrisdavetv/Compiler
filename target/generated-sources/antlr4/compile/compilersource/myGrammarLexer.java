// Generated from myGrammar.g4 by ANTLR 4.4

package compile.compilersource;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class myGrammarLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, Writeln=2, Write=3, Scan=4, Def=5, If=6, Else=7, Return=8, For=9, 
		While=10, To=11, Do=12, Start=13, End=14, Null=15, Split=16, Length=17, 
		Period=18, Or=19, And=20, Equals=21, NEquals=22, GTEquals=23, LTEquals=24, 
		Pow=25, Exclamation=26, GreatThan=27, LessThan=28, Add=29, Subtract=30, 
		Multiply=31, Divide=32, Modulus=33, OpenCurlyBracket=34, CloseCurlyBracket=35, 
		OpenBracket=36, CloseBracket=37, OpenParen=38, CloseParen=39, SemiColon=40, 
		Assign=41, Comma=42, Colon=43, Final=44, DataType=45, Bool=46, Number=47, 
		Identifier=48, String=49, Comment=50, Space=51, Int=52, Digit=53, UNKNOWN_CHAR=54;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'", 
		"'2'", "'3'", "'4'", "'5'", "'6'"
	};
	public static final String[] ruleNames = {
		"T__0", "Writeln", "Write", "Scan", "Def", "If", "Else", "Return", "For", 
		"While", "To", "Do", "Start", "End", "Null", "Split", "Length", "Period", 
		"Or", "And", "Equals", "NEquals", "GTEquals", "LTEquals", "Pow", "Exclamation", 
		"GreatThan", "LessThan", "Add", "Subtract", "Multiply", "Divide", "Modulus", 
		"OpenCurlyBracket", "CloseCurlyBracket", "OpenBracket", "CloseBracket", 
		"OpenParen", "CloseParen", "SemiColon", "Assign", "Comma", "Colon", "Final", 
		"DataType", "Bool", "Number", "Identifier", "String", "Comment", "Space", 
		"Int", "Digit", "UNKNOWN_CHAR"
	};


	public myGrammarLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "myGrammar.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\28\u0187\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3"+
		"\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\7\3"+
		"\7\3\7\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n"+
		"\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\16"+
		"\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\21\3\21"+
		"\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\24"+
		"\3\24\3\24\3\25\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\30"+
		"\3\31\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\37"+
		"\3\37\3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3(\3)\3)"+
		"\3*\3*\3+\3+\3,\3,\3-\3-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3."+
		"\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3."+
		"\5.\u0126\n.\3/\3/\3/\3/\3/\3/\3/\3/\3/\5/\u0131\n/\3\60\3\60\3\60\7\60"+
		"\u0136\n\60\f\60\16\60\u0139\13\60\5\60\u013b\n\60\3\61\3\61\7\61\u013f"+
		"\n\61\f\61\16\61\u0142\13\61\3\62\3\62\3\62\3\62\3\62\3\62\7\62\u014a"+
		"\n\62\f\62\16\62\u014d\13\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\7\62\u0156"+
		"\n\62\f\62\16\62\u0159\13\62\3\62\5\62\u015c\n\62\3\63\3\63\3\63\3\63"+
		"\7\63\u0162\n\63\f\63\16\63\u0165\13\63\3\63\3\63\3\63\3\63\7\63\u016b"+
		"\n\63\f\63\16\63\u016e\13\63\3\63\3\63\5\63\u0172\n\63\3\63\3\63\3\64"+
		"\3\64\3\64\3\64\3\65\3\65\7\65\u017c\n\65\f\65\16\65\u017f\13\65\3\65"+
		"\5\65\u0182\n\65\3\66\3\66\3\67\3\67\3\u016c\28\3\3\5\4\7\5\t\6\13\7\r"+
		"\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25"+
		")\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O"+
		")Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8\3\2\f\5\2C\\aac|\6\2\62"+
		";C\\aac|\3\2$$\5\2\f\f\17\17$$\3\2))\5\2\f\f\17\17))\4\2\f\f\17\17\5\2"+
		"\13\f\16\17\"\"\3\2\63;\3\2\62;\u019c\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2"+
		"\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2"+
		"\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3"+
		"\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3"+
		"\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65"+
		"\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3"+
		"\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2"+
		"\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2"+
		"[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3"+
		"\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\3o\3\2\2\2\5q\3\2\2\2\7y\3\2\2"+
		"\2\t\177\3\2\2\2\13\u0084\3\2\2\2\r\u0088\3\2\2\2\17\u008b\3\2\2\2\21"+
		"\u0090\3\2\2\2\23\u0097\3\2\2\2\25\u009b\3\2\2\2\27\u00a1\3\2\2\2\31\u00a4"+
		"\3\2\2\2\33\u00a7\3\2\2\2\35\u00ad\3\2\2\2\37\u00b1\3\2\2\2!\u00b6\3\2"+
		"\2\2#\u00bc\3\2\2\2%\u00c3\3\2\2\2\'\u00c5\3\2\2\2)\u00c8\3\2\2\2+\u00cb"+
		"\3\2\2\2-\u00ce\3\2\2\2/\u00d1\3\2\2\2\61\u00d4\3\2\2\2\63\u00d7\3\2\2"+
		"\2\65\u00d9\3\2\2\2\67\u00db\3\2\2\29\u00dd\3\2\2\2;\u00df\3\2\2\2=\u00e1"+
		"\3\2\2\2?\u00e3\3\2\2\2A\u00e5\3\2\2\2C\u00e7\3\2\2\2E\u00e9\3\2\2\2G"+
		"\u00eb\3\2\2\2I\u00ed\3\2\2\2K\u00ef\3\2\2\2M\u00f1\3\2\2\2O\u00f3\3\2"+
		"\2\2Q\u00f5\3\2\2\2S\u00f7\3\2\2\2U\u00f9\3\2\2\2W\u00fb\3\2\2\2Y\u00fd"+
		"\3\2\2\2[\u0125\3\2\2\2]\u0130\3\2\2\2_\u0132\3\2\2\2a\u013c\3\2\2\2c"+
		"\u015b\3\2\2\2e\u0171\3\2\2\2g\u0175\3\2\2\2i\u0181\3\2\2\2k\u0183\3\2"+
		"\2\2m\u0185\3\2\2\2op\7A\2\2p\4\3\2\2\2qr\7Y\2\2rs\7t\2\2st\7k\2\2tu\7"+
		"v\2\2uv\7g\2\2vw\7n\2\2wx\7p\2\2x\6\3\2\2\2yz\7Y\2\2z{\7t\2\2{|\7k\2\2"+
		"|}\7v\2\2}~\7g\2\2~\b\3\2\2\2\177\u0080\7U\2\2\u0080\u0081\7e\2\2\u0081"+
		"\u0082\7c\2\2\u0082\u0083\7p\2\2\u0083\n\3\2\2\2\u0084\u0085\7f\2\2\u0085"+
		"\u0086\7g\2\2\u0086\u0087\7h\2\2\u0087\f\3\2\2\2\u0088\u0089\7k\2\2\u0089"+
		"\u008a\7h\2\2\u008a\16\3\2\2\2\u008b\u008c\7g\2\2\u008c\u008d\7n\2\2\u008d"+
		"\u008e\7u\2\2\u008e\u008f\7g\2\2\u008f\20\3\2\2\2\u0090\u0091\7t\2\2\u0091"+
		"\u0092\7g\2\2\u0092\u0093\7v\2\2\u0093\u0094\7w\2\2\u0094\u0095\7t\2\2"+
		"\u0095\u0096\7p\2\2\u0096\22\3\2\2\2\u0097\u0098\7h\2\2\u0098\u0099\7"+
		"q\2\2\u0099\u009a\7t\2\2\u009a\24\3\2\2\2\u009b\u009c\7y\2\2\u009c\u009d"+
		"\7j\2\2\u009d\u009e\7k\2\2\u009e\u009f\7n\2\2\u009f\u00a0\7g\2\2\u00a0"+
		"\26\3\2\2\2\u00a1\u00a2\7v\2\2\u00a2\u00a3\7q\2\2\u00a3\30\3\2\2\2\u00a4"+
		"\u00a5\7f\2\2\u00a5\u00a6\7q\2\2\u00a6\32\3\2\2\2\u00a7\u00a8\7u\2\2\u00a8"+
		"\u00a9\7v\2\2\u00a9\u00aa\7c\2\2\u00aa\u00ab\7t\2\2\u00ab\u00ac\7v\2\2"+
		"\u00ac\34\3\2\2\2\u00ad\u00ae\7g\2\2\u00ae\u00af\7p\2\2\u00af\u00b0\7"+
		"f\2\2\u00b0\36\3\2\2\2\u00b1\u00b2\7p\2\2\u00b2\u00b3\7w\2\2\u00b3\u00b4"+
		"\7n\2\2\u00b4\u00b5\7n\2\2\u00b5 \3\2\2\2\u00b6\u00b7\7u\2\2\u00b7\u00b8"+
		"\7r\2\2\u00b8\u00b9\7n\2\2\u00b9\u00ba\7k\2\2\u00ba\u00bb\7v\2\2\u00bb"+
		"\"\3\2\2\2\u00bc\u00bd\7n\2\2\u00bd\u00be\7g\2\2\u00be\u00bf\7p\2\2\u00bf"+
		"\u00c0\7i\2\2\u00c0\u00c1\7v\2\2\u00c1\u00c2\7j\2\2\u00c2$\3\2\2\2\u00c3"+
		"\u00c4\7\60\2\2\u00c4&\3\2\2\2\u00c5\u00c6\7~\2\2\u00c6\u00c7\7~\2\2\u00c7"+
		"(\3\2\2\2\u00c8\u00c9\7(\2\2\u00c9\u00ca\7(\2\2\u00ca*\3\2\2\2\u00cb\u00cc"+
		"\7?\2\2\u00cc\u00cd\7?\2\2\u00cd,\3\2\2\2\u00ce\u00cf\7#\2\2\u00cf\u00d0"+
		"\7?\2\2\u00d0.\3\2\2\2\u00d1\u00d2\7@\2\2\u00d2\u00d3\7?\2\2\u00d3\60"+
		"\3\2\2\2\u00d4\u00d5\7>\2\2\u00d5\u00d6\7?\2\2\u00d6\62\3\2\2\2\u00d7"+
		"\u00d8\7`\2\2\u00d8\64\3\2\2\2\u00d9\u00da\7#\2\2\u00da\66\3\2\2\2\u00db"+
		"\u00dc\7@\2\2\u00dc8\3\2\2\2\u00dd\u00de\7>\2\2\u00de:\3\2\2\2\u00df\u00e0"+
		"\7-\2\2\u00e0<\3\2\2\2\u00e1\u00e2\7/\2\2\u00e2>\3\2\2\2\u00e3\u00e4\7"+
		",\2\2\u00e4@\3\2\2\2\u00e5\u00e6\7\61\2\2\u00e6B\3\2\2\2\u00e7\u00e8\7"+
		"\'\2\2\u00e8D\3\2\2\2\u00e9\u00ea\7}\2\2\u00eaF\3\2\2\2\u00eb\u00ec\7"+
		"\177\2\2\u00ecH\3\2\2\2\u00ed\u00ee\7]\2\2\u00eeJ\3\2\2\2\u00ef\u00f0"+
		"\7_\2\2\u00f0L\3\2\2\2\u00f1\u00f2\7*\2\2\u00f2N\3\2\2\2\u00f3\u00f4\7"+
		"+\2\2\u00f4P\3\2\2\2\u00f5\u00f6\7=\2\2\u00f6R\3\2\2\2\u00f7\u00f8\7?"+
		"\2\2\u00f8T\3\2\2\2\u00f9\u00fa\7.\2\2\u00faV\3\2\2\2\u00fb\u00fc\7<\2"+
		"\2\u00fcX\3\2\2\2\u00fd\u00fe\7h\2\2\u00fe\u00ff\7k\2\2\u00ff\u0100\7"+
		"p\2\2\u0100\u0101\7c\2\2\u0101\u0102\7n\2\2\u0102Z\3\2\2\2\u0103\u0104"+
		"\7d\2\2\u0104\u0105\7q\2\2\u0105\u0106\7q\2\2\u0106\u0107\7n\2\2\u0107"+
		"\u0108\7g\2\2\u0108\u0109\7c\2\2\u0109\u0126\7p\2\2\u010a\u010b\7u\2\2"+
		"\u010b\u010c\7v\2\2\u010c\u010d\7t\2\2\u010d\u010e\7k\2\2\u010e\u010f"+
		"\7p\2\2\u010f\u0126\7i\2\2\u0110\u0111\7k\2\2\u0111\u0112\7p\2\2\u0112"+
		"\u0126\7v\2\2\u0113\u0114\7h\2\2\u0114\u0115\7n\2\2\u0115\u0116\7q\2\2"+
		"\u0116\u0117\7c\2\2\u0117\u0126\7v\2\2\u0118\u0119\7n\2\2\u0119\u011a"+
		"\7q\2\2\u011a\u011b\7p\2\2\u011b\u0126\7i\2\2\u011c\u011d\7u\2\2\u011d"+
		"\u011e\7j\2\2\u011e\u011f\7q\2\2\u011f\u0120\7t\2\2\u0120\u0126\7v\2\2"+
		"\u0121\u0122\7x\2\2\u0122\u0123\7q\2\2\u0123\u0124\7k\2\2\u0124\u0126"+
		"\7f\2\2\u0125\u0103\3\2\2\2\u0125\u010a\3\2\2\2\u0125\u0110\3\2\2\2\u0125"+
		"\u0113\3\2\2\2\u0125\u0118\3\2\2\2\u0125\u011c\3\2\2\2\u0125\u0121\3\2"+
		"\2\2\u0126\\\3\2\2\2\u0127\u0128\7v\2\2\u0128\u0129\7t\2\2\u0129\u012a"+
		"\7w\2\2\u012a\u0131\7g\2\2\u012b\u012c\7h\2\2\u012c\u012d\7c\2\2\u012d"+
		"\u012e\7n\2\2\u012e\u012f\7u\2\2\u012f\u0131\7g\2\2\u0130\u0127\3\2\2"+
		"\2\u0130\u012b\3\2\2\2\u0131^\3\2\2\2\u0132\u013a\5i\65\2\u0133\u0137"+
		"\7\60\2\2\u0134\u0136\5k\66\2\u0135\u0134\3\2\2\2\u0136\u0139\3\2\2\2"+
		"\u0137\u0135\3\2\2\2\u0137\u0138\3\2\2\2\u0138\u013b\3\2\2\2\u0139\u0137"+
		"\3\2\2\2\u013a\u0133\3\2\2\2\u013a\u013b\3\2\2\2\u013b`\3\2\2\2\u013c"+
		"\u0140\t\2\2\2\u013d\u013f\t\3\2\2\u013e\u013d\3\2\2\2\u013f\u0142\3\2"+
		"\2\2\u0140\u013e\3\2\2\2\u0140\u0141\3\2\2\2\u0141b\3\2\2\2\u0142\u0140"+
		"\3\2\2\2\u0143\u014b\t\4\2\2\u0144\u014a\n\5\2\2\u0145\u0146\7^\2\2\u0146"+
		"\u014a\7^\2\2\u0147\u0148\7^\2\2\u0148\u014a\7$\2\2\u0149\u0144\3\2\2"+
		"\2\u0149\u0145\3\2\2\2\u0149\u0147\3\2\2\2\u014a\u014d\3\2\2\2\u014b\u0149"+
		"\3\2\2\2\u014b\u014c\3\2\2\2\u014c\u014e\3\2\2\2\u014d\u014b\3\2\2\2\u014e"+
		"\u015c\t\4\2\2\u014f\u0157\t\6\2\2\u0150\u0156\n\7\2\2\u0151\u0152\7^"+
		"\2\2\u0152\u0156\7^\2\2\u0153\u0154\7^\2\2\u0154\u0156\7)\2\2\u0155\u0150"+
		"\3\2\2\2\u0155\u0151\3\2\2\2\u0155\u0153\3\2\2\2\u0156\u0159\3\2\2\2\u0157"+
		"\u0155\3\2\2\2\u0157\u0158\3\2\2\2\u0158\u015a\3\2\2\2\u0159\u0157\3\2"+
		"\2\2\u015a\u015c\t\6\2\2\u015b\u0143\3\2\2\2\u015b\u014f\3\2\2\2\u015c"+
		"d\3\2\2\2\u015d\u015e\7\61\2\2\u015e\u015f\7\61\2\2\u015f\u0163\3\2\2"+
		"\2\u0160\u0162\n\b\2\2\u0161\u0160\3\2\2\2\u0162\u0165\3\2\2\2\u0163\u0161"+
		"\3\2\2\2\u0163\u0164\3\2\2\2\u0164\u0172\3\2\2\2\u0165\u0163\3\2\2\2\u0166"+
		"\u0167\7\61\2\2\u0167\u0168\7,\2\2\u0168\u016c\3\2\2\2\u0169\u016b\13"+
		"\2\2\2\u016a\u0169\3\2\2\2\u016b\u016e\3\2\2\2\u016c\u016d\3\2\2\2\u016c"+
		"\u016a\3\2\2\2\u016d\u016f\3\2\2\2\u016e\u016c\3\2\2\2\u016f\u0170\7,"+
		"\2\2\u0170\u0172\7\61\2\2\u0171\u015d\3\2\2\2\u0171\u0166\3\2\2\2\u0172"+
		"\u0173\3\2\2\2\u0173\u0174\b\63\2\2\u0174f\3\2\2\2\u0175\u0176\t\t\2\2"+
		"\u0176\u0177\3\2\2\2\u0177\u0178\b\64\2\2\u0178h\3\2\2\2\u0179\u017d\t"+
		"\n\2\2\u017a\u017c\5k\66\2\u017b\u017a\3\2\2\2\u017c\u017f\3\2\2\2\u017d"+
		"\u017b\3\2\2\2\u017d\u017e\3\2\2\2\u017e\u0182\3\2\2\2\u017f\u017d\3\2"+
		"\2\2\u0180\u0182\7\62\2\2\u0181\u0179\3\2\2\2\u0181\u0180\3\2\2\2\u0182"+
		"j\3\2\2\2\u0183\u0184\t\13\2\2\u0184l\3\2\2\2\u0185\u0186\13\2\2\2\u0186"+
		"n\3\2\2\2\22\2\u0125\u0130\u0137\u013a\u0140\u0149\u014b\u0155\u0157\u015b"+
		"\u0163\u016c\u0171\u017d\u0181\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}